// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: logs.proto

package logapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_logs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_logs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_logs_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LogEntry) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type LogBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*LogEntry            `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogBatch) Reset() {
	*x = LogBatch{}
	mi := &file_logs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBatch) ProtoMessage() {}

func (x *LogBatch) ProtoReflect() protoreflect.Message {
	mi := &file_logs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBatch.ProtoReflect.Descriptor instead.
func (*LogBatch) Descriptor() ([]byte, []int) {
	return file_logs_proto_rawDescGZIP(), []int{1}
}

func (x *LogBatch) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_logs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_logs_proto_rawDescGZIP(), []int{2}
}

func (x *UploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Series struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entry         *LogEntry              `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	Count         uint64                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Series) Reset() {
	*x = Series{}
	mi := &file_logs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_logs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_logs_proto_rawDescGZIP(), []int{3}
}

func (x *Series) GetEntry() *LogEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *Series) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SeriesBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*Series              `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeriesBatch) Reset() {
	*x = SeriesBatch{}
	mi := &file_logs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeriesBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeriesBatch) ProtoMessage() {}

func (x *SeriesBatch) ProtoReflect() protoreflect.Message {
	mi := &file_logs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeriesBatch.ProtoReflect.Descriptor instead.
func (*SeriesBatch) Descriptor() ([]byte, []int) {
	return file_logs_proto_rawDescGZIP(), []int{4}
}

func (x *SeriesBatch) GetEntries() []*Series {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_logs_proto protoreflect.FileDescriptor

const file_logs_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"logs.proto\x12\x06logapi\"r\n" +
	"\bLogEntry\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"6\n" +
	"\bLogBatch\x12*\n" +
	"\aentries\x18\x01 \x03(\v2\x10.logapi.LogEntryR\aentries\"*\n" +
	"\x0eUploadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"F\n" +
	"\x06Series\x12&\n" +
	"\x05entry\x18\x01 \x01(\v2\x10.logapi.LogEntryR\x05entry\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x04R\x05count\"7\n" +
	"\vSeriesBatch\x12(\n" +
	"\aentries\x18\x01 \x03(\v2\x0e.logapi.SeriesR\aentries2|\n" +
	"\vLogIngestor\x125\n" +
	"\tUploadLog\x12\x10.logapi.LogEntry\x1a\x16.logapi.UploadResponse\x126\n" +
	"\n" +
	"UploadLogs\x12\x10.logapi.LogBatch\x1a\x16.logapi.UploadResponseB5Z3github.com/Saumya40-codes/LogsGO/api/grpc/pb;logapib\x06proto3"

var (
	file_logs_proto_rawDescOnce sync.Once
	file_logs_proto_rawDescData []byte
)

func file_logs_proto_rawDescGZIP() []byte {
	file_logs_proto_rawDescOnce.Do(func() {
		file_logs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_logs_proto_rawDesc), len(file_logs_proto_rawDesc)))
	})
	return file_logs_proto_rawDescData
}

var file_logs_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_logs_proto_goTypes = []any{
	(*LogEntry)(nil),       // 0: logapi.LogEntry
	(*LogBatch)(nil),       // 1: logapi.LogBatch
	(*UploadResponse)(nil), // 2: logapi.UploadResponse
	(*Series)(nil),         // 3: logapi.Series
	(*SeriesBatch)(nil),    // 4: logapi.SeriesBatch
}
var file_logs_proto_depIdxs = []int32{
	0, // 0: logapi.LogBatch.entries:type_name -> logapi.LogEntry
	0, // 1: logapi.Series.entry:type_name -> logapi.LogEntry
	3, // 2: logapi.SeriesBatch.entries:type_name -> logapi.Series
	0, // 3: logapi.LogIngestor.UploadLog:input_type -> logapi.LogEntry
	1, // 4: logapi.LogIngestor.UploadLogs:input_type -> logapi.LogBatch
	2, // 5: logapi.LogIngestor.UploadLog:output_type -> logapi.UploadResponse
	2, // 6: logapi.LogIngestor.UploadLogs:output_type -> logapi.UploadResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_logs_proto_init() }
func file_logs_proto_init() {
	if File_logs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_logs_proto_rawDesc), len(file_logs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logs_proto_goTypes,
		DependencyIndexes: file_logs_proto_depIdxs,
		MessageInfos:      file_logs_proto_msgTypes,
	}.Build()
	File_logs_proto = out.File
	file_logs_proto_goTypes = nil
	file_logs_proto_depIdxs = nil
}
